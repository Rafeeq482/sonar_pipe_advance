---
- name: Install and Configure SonarQube
  hosts: all
  become: true
  vars:
    sonar_user: sonarqube
    sonar_group: sonarqube
    sonar_install_dir: /opt/sonarqube
    sonar_properties_src: ./files/sonar.properties   # path on controller
    sonar_properties_dest: "{{ sonar_install_dir }}/conf/sonar.properties"
    sonar_service_name: sonarqube
    sonar_version: 25.7.0.110598
    sonar_download_url: "https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-{{ sonar_version }}.zip"

  tasks:
    - name: Ensure required packages are installed
      apt:
        name:
          - openjdk-17-jdk
          - unzip
          - wget
        state: present
        update_cache: true

    - name: Create group
      group:
        name: "{{ sonar_group }}"
        state: present

    - name: Create user
      user:
        name: "{{ sonar_user }}"
        group: "{{ sonar_group }}"
        create_home: false
        shell: /bin/bash
        system: true

    - name: Download SonarQube
      get_url:
        url: "{{ sonar_download_url }}"
        dest: /tmp/sonarqube.zip
        mode: '0644'

    - name: Extract SonarQube
      unarchive:
        src: /tmp/sonarqube.zip
        dest: /opt
        remote_src: yes
        creates: "/opt/sonarqube-{{ sonar_version }}"

    - name: Symlink SonarQube install dir
      file:
        src: "/opt/sonarqube-{{ sonar_version }}"
        dest: "{{ sonar_install_dir }}"
        state: link

    - name: Change ownership of SonarQube directory
      file:
        path: "/opt/sonarqube-{{ sonar_version }}"
        owner: "{{ sonar_user }}"
        group: "{{ sonar_group }}"
        recurse: yes

    - name: Copy sonar.properties configuration
      copy:
        src: "{{ sonar_properties_src }}"
        dest: "{{ sonar_properties_dest }}"
        owner: "{{ sonar_user }}"
        group: "{{ sonar_group }}"
        mode: '0644'

    - name: Create systemd service for SonarQube
      copy:
        dest: /etc/systemd/system/{{ sonar_service_name }}.service
        content: |
          [Unit]
          Description=SonarQube service
          After=syslog.target network.target

          [Service]
          Type=forking
          User={{ sonar_user }}
          Group={{ sonar_group }}
          ExecStart={{ sonar_install_dir }}/bin/linux-x86-64/sonar.sh start
          ExecStop={{ sonar_install_dir }}/bin/linux-x86-64/sonar.sh stop
          Restart=on-failure
          LimitNOFILE=65536
          LimitNPROC=4096

          [Install]
          WantedBy=multi-user.target
      notify: Restart SonarQube

    - name: Enable and start SonarQube service
      systemd:
        name: "{{ sonar_service_name }}"
        enabled: true
        state: started

  handlers:
    - name: Restart SonarQube
      systemd:
        name: "{{ sonar_service_name }}"
        state: restarted
